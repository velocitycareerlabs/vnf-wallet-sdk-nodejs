name: NodeJS-SDK

on:
  push:
    branches:
      - main
      - staging
      - dev
      - VL-6484
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  LERNA_VERSION: '6.6.2'
  NODE_VERSION: '20'
  VERSION: 'v0.0.1'
jobs:
  test-nodejs-sdk:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone repository
        uses: actions/checkout@v4
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache node modules
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install dependencies
        run: yarn --frozen-lockfile --pure-lockfile

      # Run test 
      - name: Run Test
        run: yarn lerna run test
        continue-on-error: true

  build-nodejs-sdk:
    runs-on: ubuntu-latest
    needs: 
      - test-nodejs-sdk
    steps:
      - name: Git clone repository
        uses: actions/checkout@v4
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - name: Cache node modules
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      # Install dependencies
      - name: Install dependencies
        run: yarn --frozen-lockfile --pure-lockfile
      # Build SDK
      - name: Build SDK
        run: yarn lerna run build
      # Pack SDK
      - name: Pack SDK
        run: yarn pack
      # Upload Artifacts
      - name: Upload Artifact
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-${{ env.VERSION }}.tgz
          path: ${{ github.event.repository.name }}
          if-no-files-found: error
          retention-days: 1

